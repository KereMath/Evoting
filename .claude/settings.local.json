{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker:*)",
      "Bash(docker-compose ps:*)",
      "Bash(docker-compose exec postgres psql:*)",
      "Bash(docker-compose build:*)",
      "Bash(docker-compose:*)",
      "Bash(curl:*)",
      "Bash(cargo build:*)",
      "Bash(make:*)",
      "Bash(make)",
      "Bash(awk:*)",
      "Bash(xargs docker rm:*)",
      "Bash(xargs -r docker rm -f)",
      "Bash(python3:*)",
      "Bash(xargs -r docker network rm)",
      "Bash(ELECTION_ID=\"9e0e4452-c7ee-4565-a9d0-e6c98e158156\":*)",
      "Bash(__NEW_LINE__ curl -s -X POST http://localhost:8080/api/voters -H \"Content-Type: application/json\" -d \"{\n  \"\"election_id\"\": \"\"$ELECTION_ID\"\",\n  \"\"tc_id\"\": \"\"12345678901\"\"\n}\")",
      "Bash(__NEW_LINE__ echo \"âœ… 1 voter created\")",
      "Bash(__NEW_LINE__ curl -s -X POST \"http://localhost:8080/api/elections/$ELECTION_ID/setup\" -H \"Content-Type: application/json\")",
      "Bash(__NEW_LINE__ curl -s -X POST \"http://localhost:8080/api/elections/$ELECTION_ID/crypto-setup\" -H \"Content-Type: application/json\" -d '{\n  \"\"security_level\"\": 256\n}')",
      "Bash(echo \"ðŸ”‘ Starting DKG (retry after fix)...\" curl -s -X POST \"http://localhost:8080/api/elections/$ELECTION_ID/keygen/start\" -H \"Content-Type: application/json\" -d '{}')",
      "Bash(python:*)",
      "Bash(__NEW_LINE__ timeout 15 curl -v \"http://localhost:8080/api/elections/$ELECTION_ID/keygen/start\" )",
      "Bash(echo \"ðŸ”‘ Starting DKG with network connection fix...\" curl -s -X POST \"http://localhost:8080/api/elections/$ELECTION_ID/keygen/start\" -H \"Content-Type: application/json\" -d '{}')",
      "Bash(__NEW_LINE__ curl -s -X POST \"http://localhost:8080/api/elections/$ELECTION_ID/keygen/start\" -H \"Content-Type: application/json\" -d '{}')",
      "Bash(echo \"ðŸ”‘ Final DKG test with full network connectivity...\" curl -s -X POST \"http://localhost:8080/api/elections/$ELECTION_ID/keygen/start\" -H \"Content-Type: application/json\" -d '{}')",
      "Bash(__NEW_LINE__ curl -s -w \"\\nHTTP: %{http_code}\\n\" -X POST \"http://localhost:8080/api/elections/$ELECTION_ID/keygen/start\" -H \"Content-Type: application/json\" -d '{}')",
      "Bash(ELECTION_ID=\"16b3d5f7-0524-4726-924d-e74dd6678ac9\":*)",
      "Bash(ELECTION_ID=\"16b3d5f7-0524-4726-924d-e74dd6678ac9\" echo \"ðŸ“Š Current election status:\" curl -s \"http://localhost:8080/api/elections/$ELECTION_ID\")",
      "Bash(xargs -r docker rm -f docker network ls --filter \"name=16b3d5f7\" --format \"{{.Name}}\")",
      "Bash(xargs -r docker network rm echo \"âœ… Cleanup complete\")",
      "Bash(ELECTION_ID=\"16b3d5f7-0524-4726-924d-e74dd6678ac9\" echo \"Adding Trustee 1...\" curl -v -X POST http://localhost:8080/api/trustees -H \"Content-Type: application/json\" -d \"{\"\"election_id\"\": \"\"$ELECTION_ID\"\", \"\"name\"\": \"\"Trustee 1\"\", \"\"email\"\": \"\"trustee1@test.com\"\", \"\"docker_type\"\": \"\"TrusteeA\"\"}\")",
      "Bash(bash:*)",
      "Bash(ELECTION_ID=\"7a61b130-9a9c-4d1d-8b6f-12c07f3c2e20\" echo \"Cleaning up existing containers...\" docker ps -a)",
      "Bash(true echo \"\" echo \"Resetting election to phase 3...\" docker-compose exec -T postgres psql -U evoting -d evoting_db -c \"UPDATE elections SET phase = 3, docker_network = NULL, ttp_port = NULL WHERE id = ''''$ELECTION_ID'''';\" echo \"\" echo \"Running fresh setup...\" curl -s -X POST \"http://localhost:8080/api/elections/$ELECTION_ID/setup\" -H \"Content-Type: application/json\")",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(ELECTION_ID=\"db4e7a72-1117-436b-ba96-7abb5948f663\")",
      "Bash(xargs -r docker stop)",
      "Bash(xargs -r docker rm)",
      "Bash(while read container)",
      "Bash(do echo \"=== $container ===\")",
      "Bash(done)",
      "Bash(winpty docker exec -it trustee-1d9e0790-6714-45f7-a84a-069249cffd9b-73317ddf-f066-47e5-8734-3241f3790b30 /app/crypto/dkg_cli generate_polynomials 2)",
      "Bash(timeout 30 bash -c 'until docker logs evoting-main-server 2>&1 | grep -q \"\"Server started\"\"; do sleep 1; done; echo \"\"Backend ready\"\"')",
      "Bash(ForEach-Object { docker volume rm $_ -f })",
      "Bash(Out-Null)",
      "Bash(xargs -I {} docker logs {})",
      "Bash(xargs -r -n1 docker network disconnect -f election_5cd31ee8-5030-4acf-8bba-910fa2e17e9a)",
      "Bash(/dev/null)",
      "Bash(chmod +x test-dkg-fix.sh)",
      "Bash(ELECTION_ID=\"e56d5907-c4e9-456f-8775-4abaf89dfbf0\")",
      "Bash(__NEW_LINE__ echo \"Adding trustees...\")",
      "Bash(for i in 1 2 3)",
      "Bash(do)",
      "Bash(echo \"âœ… Trustee $i added\")",
      "Bash(__NEW_LINE__ echo \"Setting up election...\")",
      "Bash(__NEW_LINE__ echo \"Running crypto setup...\")",
      "Bash(ELECTION_ID=\"e56d5907-c4e9-456f-8775-4abaf89dfbf0\" curl -s \"http://localhost:8080/api/elections/$ELECTION_ID\")",
      "Bash(__NEW_LINE__ docker-compose exec -T postgres psql -U evoting -d evoting_db -c \"UPDATE elections SET phase = 3 WHERE id = ''$ELECTION_ID'';\")",
      "Bash(ELECTION_ID=\"5cd31ee8-5030-4acf-8bba-910fa2e17e9a\")",
      "Bash(__NEW_LINE__ echo \"Checking if old election still exists...\")",
      "Bash(ELECTION_ID=\"0cd47568-329d-4b64-af89-b57d1c979c60\")",
      "Bash(echo \"=== Trustee 1 Logs ===\" docker logs trustee-$ELECTION_ID-1)",
      "Bash(uniq -c echo \"\" echo \"=== Qualified Set ===\" docker logs trustee-0cd47568-329d-4b64-af89-b57d1c979c60-3542d8ae-861f-4d8a-b71a-84acb7b64b6c)",
      "Bash(xargs -r docker rm -f docker-compose exec -T postgres psql -U evoting -d evoting_db -c \"DELETE FROM elections WHERE id = ''''0cd47568-329d-4b64-af89-b57d1c979c60'''';\")",
      "Bash(while read net)",
      "Bash(do echo \"Disconnecting containers from $net...\" docker network inspect $net -f '{{range .Containers}}{{.Name}} {{end}}')",
      "Bash(xargs -n1)",
      "Bash(do docker network disconnect -f $net $container)",
      "Bash(true done docker network rm $net)",
      "Bash(timeout 15 curl -s -X POST http://localhost:8080/api/trustees )",
      "Bash(xargs -r docker rm -f docker ps -a --filter \"name=voter\" --format \"{{.Names}}\")",
      "Bash(xargs -r docker rm -f echo \"Trustee ve voter containerlar silindi\")",
      "Bash(ELECTION_ID=\"2cd2aa2e-975a-47fe-99ec-cc76d6cbe2e4\" docker logs trustee-$ELECTION_ID-38592681-05dd-4fff-b111-062ce606a2c1)",
      "Bash(npm install)",
      "Bash(npm run dev)",
      "Bash(cargo check --release)"
    ],
    "deny": [],
    "ask": []
  }
}
