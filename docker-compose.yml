version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: evoting-postgres
    environment:
      POSTGRES_DB: evoting_db
      POSTGRES_USER: evoting
      POSTGRES_PASSWORD: evoting
      POSTGRES_INITDB_ARGS: "-E UTF8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U evoting -d evoting_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - evoting-network

  # Main Server (Backend)
  main-server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: evoting-main-server
    ports:
      - "8080:8080"
    environment:
      - RUST_LOG=info
      - DATABASE_URL=postgresql://evoting:evoting@postgres:5432/evoting_db
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./crypto:/app/crypto
      - server_logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - evoting-network
    restart: unless-stopped

  # Frontend (React Admin Panel)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: evoting-frontend
    ports:
      - "3000:80"
    depends_on:
      - main-server
    networks:
      - evoting-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  server_logs:
    driver: local

networks:
  evoting-network:
    driver: bridge
    name: evoting-network
